<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>